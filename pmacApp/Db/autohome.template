#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/pmac.dbd")
#! DBDEND


# % macro, __doc__, Provides PVs to start and monitor homing via homing PLCs
# that conform to the DLS standard. If you use custom homing states then be
# sure to label them here
# % macro, P, Pv Prefix
# % macro, PLC, PLC number
# % macro, PORT,  Serial port to do communications across
# % macro, CTRL, Controller record name prefix for disabling axis writes
# % macro, GRP1, Optional.  Homing group 1 description.  Defaults to "All".
# % macro, GRP2, Optional.  Homing group 2 description.  Defaults to give empty description string.
# % macro, GRP3, Optional.  Homing group 3 description.  Defaults to give empty description string.
# % macro, GRP4, Optional.  Homing group 4 description.  Defaults to give empty description string.
# % macro, GRP5, Optional.  Homing group 5 description.  Defaults to give empty description string.
# % macro, GRP6, Optional.  Homing group 6 description.  Defaults to give empty description string.
# % macro, GRP7, Optional.  Homing group 7 description.  Defaults to give empty description string.
# % macro, GRP8, Optional.  Homing group 8 description.  Defaults to give empty description string.
# % macro, GRP9, Optional.  Homing group 9 description.  Defaults to give empty description string.
# % macro, GRP10, Optional.  Homing group 10 description.  Defaults to give empty description string.
# % macro, STATE11, Optional.  Homing state 11 description.  Defaults to give empty description string.
# % macro, STATE12, Optional.  Homing state 12 description.  Defaults to give empty description string.
# % macro, STATE13, Optional.  Homing state 13 description.  Defaults to give empty description string.
# % macro, STATE14, Optional.  Homing state 14 description.  Defaults to give empty description string.
# % macro, STATE15, Optional.  Homing state 15 description.  Defaults to give empty description string.
# % macro, STATUS11, Optional.  Homing status 11 description (e.g. for custom limit checks).  Defaults to give empty description string.
# % macro, STATUS12, Optional.  Homing status 12 description (e.g. for custom limit checks).  Defaults to give empty description string.
# % macro, STATUS13, Optional.  Homing status 13 description (e.g. for custom limit checks).  Defaults to give empty description string.
# % macro, STATUS14, Optional.  Homing status 14 description (e.g. for custom limit checks).  Defaults to give empty description string.
# % macro, STATUS15, Optional.  Homing status 15 description (e.g. for custom limit checks).  Defaults to give empty description string.
# % macro, STATUSSV11, Optional.  Homing status 11 severity.  Defaults to NO_ALARM.
# % macro, STATUSSV12, Optional.  Homing status 12 severity.  Defaults to NO_ALARM.
# % macro, STATUSSV13, Optional.  Homing status 13 severity.  Defaults to NO_ALARM.
# % macro, STATUSSV14, Optional.  Homing status 14 severity.  Defaults to NO_ALARM.
# % macro, STATUSSV15, Optional.  Homing status 15 severity.  Defaults to NO_ALARM.
# % macro, DESC, Description

# % macro, name, Object name and gui association name
# This associates an edm screen with the template
# % gui, $(name=), edm, autohome.edl, P=$(P)
# This associates a BOY screen with the template
# % gui, $(name=), boydetail, pmacUtilApp_opi/motorhome_detail.opi, P=$(P),DESC=$(DESC), 
# % gui, $(name=), boyembed, pmacUtilApp_opi/motorhome_embed_box.opi, P=$(P), DESC=$(DESC), 
# % gui, $(name=), boyembed, pmacUtilApp_opi/motorhome_embed.opi, P=$(P), DESC=$(DESC),

# These define what PVs a motor detail screen should contain
# % gui, $(name=), readback, Homing,   $(P):HM:HOMING
# % gui, $(name=), readback, Homing State,   $(P):HM:STATE
# % gui, $(name=), readback, Homing Status,   $(P):HM:STATUS
# % gui, $(name=), readback, Move Timer,   $(P):HM:TIMEOUT
# % gui, $(name=), enum, Group to Home,  $(P):HM:HMGRP
# % gui, $(name=), command, Do Home,  $(P):HM:HOME
# % gui, $(name=), command, Abort,  $(P):HM:ABORT.PROC
# % gui, $(name=), readback, Axis 1, =pv(concat(pv("$(P):HM:M1PV"),":HMPOS")), =pv(concat(pv("$(P):HM:M1PV"),".DESC"))
# % gui, $(name=), readback, Axis 2, =pv(concat(pv("$(P):HM:M2PV"),":HMPOS")), =pv(concat(pv("$(P):HM:M2PV"),".DESC"))
# % gui, $(name=), readback, Axis 3, =pv(concat(pv("$(P):HM:M3PV"),":HMPOS")), =pv(concat(pv("$(P):HM:M3PV"),".DESC"))
# % gui, $(name=), readback, Axis 4, =pv(concat(pv("$(P):HM:M4PV"),":HMPOS")), =pv(concat(pv("$(P):HM:M4PV"),".DESC"))
# % gui, $(name=), readback, Axis 5, =pv(concat(pv("$(P):HM:M5PV"),":HMPOS")), =pv(concat(pv("$(P):HM:M5PV"),".DESC"))
# % gui, $(name=), readback, Axis 6, =pv(concat(pv("$(P):HM:M6PV"),":HMPOS")), =pv(concat(pv("$(P):HM:M6PV"),".DESC"))
# % gui, $(name=), readback, Axis 7, =pv(concat(pv("$(P):HM:M7PV"),":HMPOS")), =pv(concat(pv("$(P):HM:M7PV"),".DESC"))
# % gui, $(name=), readback, Axis 8, =pv(concat(pv("$(P):HM:M8PV"),":HMPOS")), =pv(concat(pv("$(P):HM:M8PV"),".DESC"))

record(stringout, "$(P):HM:ASYN1") {
  field(DESC, "User cmd to PMAC")
  field(SCAN, "Passive")
  field(PINI, "NO")
  field(DTYP, "asynOctetWrite")
  field(OUT,  "@asyn($(PORT),0)PMAC_C_WRITE_CMD")
}

record(stringout, "$(P):HM:ABORT") {
  field(DESC, "Send abort cmd")
  field(SCAN, "Passive")
  field(PINI, "NO")
  field(DTYP, "Soft Channel")
  field(VAL, "P$(PLC)01=2")
  field(OUT, "$(P):HM:ASYN1 PP")
}

record(scalcout, "$(P):HM:RESUME") {
  field(DESC, "Send resume cmd")
  field(SCAN, "Passive")
  field(PINI, "NO")
  field(DTYP, "Soft Channel")
  field(CALC, "PRINTF('P$(PLC)01=%d',A)")
  field(INPA, "$(P):HM:DEBUG.RVAL")
  field(OUT, "$(P):HM:ASYN1 PP")
}

record(mbbi, "$(P):HM:STATUS") {
  field(DESC, "Homing status")
  field(DTYP, "asynInt32")
  field(SCAN, "I/O Intr")
  field(INP, "@asyn($(PORT),0)PMAC_VIF_P$(PLC)01")
  field(PINI, "YES")
  field(FLNK, "$(P):HM:CHECK")
  field(ZRVL, "0")
  field(ZRST, "Done")
  field(ZRSV, "NO_ALARM")
  field(ONVL, "1")
  field(ONST, "Homing")
  field(ONSV, "NO_ALARM")
  field(TWVL, "2")
  field(TWST, "Aborted")
  field(TWSV, "MINOR")
  field(THVL, "3")
  field(THST, "Timeout")
  field(THSV, "MAJOR")
  field(FRVL, "4")
  field(FRST, "Fatal foll err")
  field(FRSV, "MAJOR")
  field(FVVL, "5")
  field(FVSV, "MAJOR")
  field(FVST, "Stopped on lim")
  field(SXVL, "6")
  field(SXSV, "MAJOR")
  field(SXST, "Incomplete Home")
  field(SVVL, "7")
  field(SVSV, "MAJOR")
  field(SVST, "Invalid Setting")
  field(EIVL, "8")
  field(EISV, "MINOR")
  field(EIST, "Waiting for user")
  field(NIVL, "9")
  field(NIST, "Homing (Debug)")
  field(NISV, "NO_ALARM")
  field(TEVL, "10")
  field(TEST, "Reserved")
  field(TESV, "NO_ALARM")
  field(ELVL, "11")
  field(ELST, "$(STATUS11=)")
  field(ELSV, "$(STATUSSV11=NO_ALARM)")
  field(TVVL, "12")
  field(TVST, "$(STATUS12=)")
  field(TVSV, "$(STATUSSV12=NO_ALARM)")
  field(TTVL, "13")
  field(TTST, "$(STATUS13=)")
  field(TTSV, "$(STATUSSV13=NO_ALARM)")
  field(FTVL, "14")
  field(FTST, "$(STATUS14=)")
  field(FTSV, "$(STATUSSV14=NO_ALARM)")
  field(FFVL, "15")
  field(FFST, "$(STATUS15=)")
  field(FFSV, "$(STATUSSV15=NO_ALARM)")
}

record(mbbi, "$(P):HM:STATE") {
  field(DESC, "Homing state")
  field(DTYP, "asynInt32")
  field(SCAN, "I/O Intr")
  field(INP, "@asyn($(PORT),0)PMAC_VIF_P$(PLC)00")
  field(PINI, "YES")
  field(ZRVL, "0")
  field(ZRST, "Idle")
  field(ONVL, "1")
  field(ONST, "Configuring")
  field(TWVL, "2")
  field(TWST, "Move to neg lim")
  field(THVL, "3")
  field(THST, "Move to pos lim")
  field(FRVL, "4")
  field(FRST, "Homing")
  field(FVVL, "5")
  field(FVST, "Post home move")
  field(SXVL, "6")
  field(SXST, "Aligning")
  field(SVVL, "7")
  field(SVST, "Done")
  field(EIVL, "8")
  field(EIST, "Fast Hm Search")
  field(NIVL, "9")
  field(NIST, "Fast Retrace")
  field(TEVL, "10")
  field(TEST, "Pre home move")
  field(ELVL, "11")
  field(ELST, "$(STATE11=)")
  field(TVVL, "12")
  field(TVST, "$(STATE12=)")
  field(TTVL, "13")
  field(TTST, "$(STATE13=)")
  field(FTVL, "14")
  field(FTST, "$(STATE14=)")
  field(FFVL, "15")
  field(FFST, "$(STATE15=)")
}

record(busy, "$(P):HM:HOMING") {
  field(FLNK, "$(P):HM:HOMED")
}

record(calcout, "$(P):HM:READONLY") {
  field(CALC, "A")
  field(INPA, "$(P):HM:HOMING CP")
  field(OUT, "$(CTRL):AxesReadonly PP")
}

record(bo, "$(P):HM:HOME") {
  field(SCAN, "Passive")
  field(PINI, "NO")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(P):HM:START")
}

record(calcout, "$(P):HM:CHECK") {
  field(CALC, "A==1|A==8|A==9")
  field(INPA, "$(P):HM:STATUS PP")
  field(OUT, "$(P):HM:HOMING CA")
  field(OOPT, "When Zero")
  field(DOPT, "Use CALC")
  # ensure we can never get into a locked state
  # since this disables all motor records
  field(SCAN, "5 second")
}

record(bo, "$(P):HM:HOMED") {
  field(SCAN, "Passive")
  field(PINI, "NO")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(P):HM:HOME")
  field(OUT, "$(P):HM:HOME PP")
  field(VAL, "0")
}

record(bo, "$(P):HM:BUF1") {
  field(SCAN, "Passive")
  field(PINI, "NO")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(P):HM:STARTHMP")
  field(OUT, "$(P):HM:HOMING PP")
}

record(calcout, "$(P):HM:START") {
  field(DESC, "Check if usr started")
  field(SCAN, "Passive")
  field(PINI, "NO")
  field(DTYP, "Soft Channel")
  field(CALC, "A")
  field(INPA, "$(P):HM:HOME PP")
  field(OUT, "$(P):HM:BUF1 PP")
  field(OOPT, "Transition To Non-zero")
  field(DOPT, "Use CALC")
}

record(scalcout, "$(P):HM:STARTHMP") {
  field(DESC, "Start homing plc/prog")
  field(SCAN, "Passive")
  field(PINI, "NO")
  field(DTYP, "Soft Channel")
  field(CALC, "PRINTF('P$(PLC)01=%d ENABLE PLC$(PLC)',A)")
  field(INPA, "$(P):HM:DEBUG.RVAL")
  field(OUT, "$(P):HM:ASYN1 PP")
}

record(mbbo, "$(P):HM:HMGRP") {
  field(DESC, "Homing group")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(P):HM:SENDGRP")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(SVVL, "7")
  field(EIVL, "8")
  field(NIVL, "9")
  field(TEVL, "10")
  field(ZRST, "none")
  field(ONST, "$(GRP1=All)")
  field(TWST, "$(GRP2=)")
  field(THST, "$(GRP3=)")
  field(FRST, "$(GRP4=)")
  field(FVST, "$(GRP5=)")
  field(SXST, "$(GRP6=)")
  field(SVST, "$(GRP7=)")
  field(EIST, "$(GRP8=)")
  field(NIST, "$(GRP9=)")
  field(TEST, "$(GRP10=)")
  field(UNSV, "INVALID")
  field(IVOA, "Set output to IVOV")
  field(IVOV, "0")
}

record(scalcout, "$(P):HM:SENDGRP") {
  field(DESC, "Select group on pmac")
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(CALC, "PRINTF('P$(PLC)02=%i',A)")
  field(INPA, "$(P):HM:HMGRP PP")
  field(OUT, "$(P):HM:ASYN1 PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
}

record(ao, "$(P):HM:PLC") {
  field(DTYP, "Soft Channel")
  field(VAL, "$(PLC)")
}

record(longin, "$(P):HM:TIMER") {
  field(DESC, "parse timer")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0)PMAC_VIF_I`5111+($(PLC)&30)*50+$(PLC)%2`")
  field(SCAN, ".2 second")
  field(SDIS, "$(P):HM:HOMING")
  field(DISV, "0")
}

record(longin, "$(P):HM:I10") {
  field(DESC, "parse timer")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0)PMAC_VIS_I10")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P):HM:TIMEOUT") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(CALC, "A/8388608*B/1000")
  field(INPA, "$(P):HM:TIMER CP")
  field(INPB, "$(P):HM:I10 CP")
  field(OOPT, "On Change")
  field(DOPT, "Use CALC")
  field(EGU, "s")
  field(PREC, "3")
}

record(stringout, "$(P):HM:M1PV") {
}

record(stringout, "$(P):HM:M2PV") {
}

record(stringout, "$(P):HM:M3PV") {
}

record(stringout, "$(P):HM:M4PV") {
}

record(stringout, "$(P):HM:M5PV") {
}

record(stringout, "$(P):HM:M6PV") {
}

record(stringout, "$(P):HM:M7PV") {
}

record(stringout, "$(P):HM:M8PV") {
}

record(stringout, "$(P):HM:M9PV") {
}

record(stringout, "$(P):HM:M10PV") {
}

record(stringout, "$(P):HM:M11PV") {
}

record(stringout, "$(P):HM:M12PV") {
}

record(stringout, "$(P):HM:M13PV") {
}

record(stringout, "$(P):HM:M14PV") {
}

record(stringout, "$(P):HM:M15PV") {
}

record(stringout, "$(P):HM:M16PV") {
}

record(stringout, "$(P):HM:M17PV") {
}

record(stringout, "$(P):HM:M18PV") {
}

record(stringout, "$(P):HM:M19PV") {
}

record(stringout, "$(P):HM:M20PV") {
}

record(stringout, "$(P):HM:M21PV") {
}

record(stringout, "$(P):HM:M22PV") {
}

record(stringout, "$(P):HM:M23PV") {
}

record(stringout, "$(P):HM:M24PV") {
}

record(stringout, "$(P):HM:M25PV") {
}

record(stringout, "$(P):HM:M26PV") {
}

record(stringout, "$(P):HM:M27PV") {
}

record(stringout, "$(P):HM:M28PV") {
}

record(stringout, "$(P):HM:M29PV") {
}

record(stringout, "$(P):HM:M30PV") {
}

record(stringout, "$(P):HM:M31PV") {
}

record(stringout, "$(P):HM:M32PV") {
}

record(longin, "$(P):HM:PARSE4") {
  field(DTYP, "asynInt32")
  field(SCAN, "I/O Intr")
  field(INP, "@asyn($(PORT),0)PMAC_VIF_P$(PLC)02")
}

record(calcout, "$(P):HM:PUSHGRP") {
  field(INPA, "$(P):HM:PARSE4 CP")
  field(CALC, "A")
  field(OUT, "$(P):HM:HMGRP PP")
}

record(mbbo, "$(P):HM:DEBUG") {
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "Soft Channel")
  field(ZRVL, "1")
  field(ONVL, "9")
  field(ZRST, "Normal")
  field(ONST, "Debug")
}

#! Further lines contain data used by VisualDCT
#! View(2476,1874,1.1)
#! Record("$(P):HM:ASYN1",2060,2274,0,1,"$(P):HM:ASYN1")
#! Record("$(P):HM:ABORT",2080,2500,0,1,"$(P):HM:ABORT")
#! Field("$(P):HM:ABORT.OUT",16777215,0,"$(P):HM:ABORT.OUT")
#! Link("$(P):HM:ABORT.OUT","$(P):HM:ASYN1.AOUT")
#! Record("$(P):HM:RESUME",2320,2326,0,0,"$(P):HM:RESUME")
#! Field("$(P):HM:RESUME.OUT",16777215,0,"$(P):HM:RESUME.OUT")
#! Link("$(P):HM:RESUME.OUT","$(P):HM:ASYN1.AOUT")
#! Field("$(P):HM:RESUME.INPA",16777215,0,"$(P):HM:RESUME.INPA")
#! Link("$(P):HM:RESUME.INPA","$(P):HM:DEBUG.RVAL")
#! Record("$(P):HM:ASYN2",2340,2098,0,1,"$(P):HM:ASYN2")
#! Field("$(P):HM:ASYN2.FLNK",16777215,1,"$(P):HM:ASYN2.FLNK")
#! Link("$(P):HM:ASYN2.FLNK","$(P):HM:ASYN2/FLNK")
#! Field("$(P):HM:ASYN2.SDIS",16777215,1,"$(P):HM:ASYN2.SDIS")
#! Link("$(P):HM:ASYN2.SDIS","$(P):HM:HOMING.VAL")
#! Field("$(P):HM:ASYN2.AINP",16777215,1,"$(P):HM:ASYN2.AINP")
#! Connector("$(P):HM:ASYN2/FLNK","$(P):HM:FAN1",2600,2210,16777215,"",0)
#! Record("$(P):HM:PARSE1",2980,2084,0,0,"$(P):HM:PARSE1")
#! Field("$(P):HM:PARSE1.VAL",16777215,1,"$(P):HM:PARSE1.VAL")
#! Field("$(P):HM:PARSE1.FLNK",16777215,1,"$(P):HM:PARSE1.FLNK")
#! Link("$(P):HM:PARSE1.FLNK","$(P):HM:PARSE1/FLNK")
#! Field("$(P):HM:PARSE1.INAA",16777215,0,"$(P):HM:PARSE1.INAA")
#! Link("$(P):HM:PARSE1.INAA","$(P):HM:ASYN2.AINP")
#! Connector("$(P):HM:PARSE1/FLNK","$(P):HM:STATUS",3200,2185,16777215,"",0)
#! Record("$(P):HM:PARSE2",2960,2424,0,0,"$(P):HM:PARSE2")
#! Field("$(P):HM:PARSE2.FLNK",16777215,1,"$(P):HM:PARSE2.FLNK")
#! Link("$(P):HM:PARSE2.FLNK","$(P):HM:STATE")
#! Field("$(P):HM:PARSE2.INAA",16777215,0,"$(P):HM:PARSE2.INAA")
#! Link("$(P):HM:PARSE2.INAA","$(P):HM:ASYN2.AINP")
#! Field("$(P):HM:PARSE2.VAL",16777215,1,"$(P):HM:PARSE2.VAL")
#! Record("$(P):HM:STATUS",3260,1780,0,0,"$(P):HM:STATUS")
#! Field("$(P):HM:STATUS.FLNK",16777215,0,"$(P):HM:STATUS.FLNK")
#! Link("$(P):HM:STATUS.FLNK","$(P):HM:STATUS/FLNK1")
#! Field("$(P):HM:STATUS.INP",16777215,0,"$(P):HM:STATUS.INP")
#! Link("$(P):HM:STATUS.INP","$(P):HM:PARSE1.VAL")
#! Connector("$(P):HM:STATUS/FLNK1","$(P):HM:STATUS/FLNK",3180,2135,16777215,"",0)
#! Connector("$(P):HM:STATUS/FLNK","$(P):HM:CHECK",3037,1920,16777215,"",0)
#! Record("$(P):HM:STATE",3260,2334,0,0,"$(P):HM:STATE")
#! Field("$(P):HM:STATE.INP",16777215,0,"$(P):HM:STATE.INP")
#! Link("$(P):HM:STATE.INP","$(P):HM:PARSE2.VAL")
#! Record("$(P):HM:HOMING",2360,1790,0,1,"$(P):HM:HOMING")
#! Field("$(P):HM:HOMING.FLNK",16777215,0,"$(P):HM:HOMING.FLNK")
#! Link("$(P):HM:HOMING.FLNK","$(P):HM:HOMED")
#! Field("$(P):HM:HOMING.VAL",16777215,1,"$(P):HM:HOMING.VAL")
#! Record("$(P):HM:HOME",1480,2028,0,0,"$(P):HM:HOME")
#! Field("$(P):HM:HOME.FLNK",16777215,1,"$(P):HM:HOME.FLNK")
#! Link("$(P):HM:HOME.FLNK","$(P):HM:START")
#! Field("$(P):HM:HOME.VAL",16777215,1,"$(P):HM:HOME.VAL")
#! Record("$(P):HM:CHECK",2700,1794,0,1,"$(P):HM:CHECK")
#! Field("$(P):HM:CHECK.OUT",16777215,0,"$(P):HM:CHECK.OUT")
#! Link("$(P):HM:CHECK.OUT","$(P):HM:HOMING.VAL")
#! Field("$(P):HM:CHECK.INPA",16777215,1,"$(P):HM:CHECK.INPA")
#! Link("$(P):HM:CHECK.INPA","$(P):HM:PARSE1.VAL")
#! Record("$(P):HM:FAN1",2660,2081,0,0,"$(P):HM:FAN1")
#! Field("$(P):HM:FAN1.FLNK",16777215,1,"$(P):HM:FAN1.FLNK")
#! Link("$(P):HM:FAN1.FLNK","$(P):HM:PARSE1")
#! Field("$(P):HM:FAN1.LNK1",16777215,1,"$(P):HM:FAN1.LNK1")
#! Link("$(P):HM:FAN1.LNK1","$(P):HM:FAN1/LNK1")
#! Field("$(P):HM:FAN1.LNK2",16777215,1,"$(P):HM:FAN1.LNK2")
#! Link("$(P):HM:FAN1.LNK2","$(P):HM:FAN1/LNK2")
#! Connector("$(P):HM:FAN1/LNK2","$(P):HM:PARSE3",2880,2426,16777215,"",0)
#! Connector("$(P):HM:FAN1/LNK1","$(P):HM:PARSE2",2900,2366,16777215,"",0)
#! Record("$(P):HM:HOMED",1540,1800,0,1,"$(P):HM:HOMED")
#! Field("$(P):HM:HOMED.OUT",16777215,0,"$(P):HM:HOMED.OUT")
#! Link("$(P):HM:HOMED.OUT","$(P):HM:HOMED/OUT")
#! Field("$(P):HM:HOMED.FLNK",16777215,0,"$(P):HM:HOMED.FLNK")
#! Link("$(P):HM:HOMED.FLNK","$(P):HM:HOME")
#! Connector("$(P):HM:HOMED/OUT","$(P):HM:HOME.VAL",1420,2060,16777215,"",0)
#! Record("$(P):HM:BUF1",2020,2054,0,0,"$(P):HM:BUF1")
#! Field("$(P):HM:BUF1.VAL",16777215,1,"$(P):HM:BUF1.VAL")
#! Field("$(P):HM:BUF1.OUT",16777215,1,"$(P):HM:BUF1.OUT")
#! Link("$(P):HM:BUF1.OUT","$(P):HM:HOMING.VAL")
#! Field("$(P):HM:BUF1.FLNK",16777215,0,"$(P):HM:BUF1.FLNK")
#! Link("$(P):HM:BUF1.FLNK","$(P):HM:STARTHMP")
#! Record("$(P):HM:START",1760,1978,0,0,"$(P):HM:START")
#! Field("$(P):HM:START.INPA",16777215,0,"$(P):HM:START.INPA")
#! Link("$(P):HM:START.INPA","$(P):HM:HOME.VAL")
#! Field("$(P):HM:START.OUT",16777215,1,"$(P):HM:START.OUT")
#! Link("$(P):HM:START.OUT","$(P):HM:BUF1.VAL")
#! Record("$(P):HM:STARTHMP",1620,2246,0,1,"$(P):HM:STARTHMP")
#! Field("$(P):HM:STARTHMP.OUT",16777215,1,"$(P):HM:STARTHMP.OUT")
#! Link("$(P):HM:STARTHMP.OUT","$(P):HM:ASYN1.AOUT")
#! Field("$(P):HM:STARTHMP.INPA",16777215,0,"$(P):HM:STARTHMP.INPA")
#! Link("$(P):HM:STARTHMP.INPA","$(P):HM:DEBUG.RVAL")
#! Record("$(P):HM:HMGRP",1420,2424,0,1,"$(P):HM:HMGRP")
#! Field("$(P):HM:HMGRP.VAL",16777215,1,"$(P):HM:HMGRP.VAL")
#! Field("$(P):HM:HMGRP.FLNK",16777215,1,"$(P):HM:HMGRP.FLNK")
#! Link("$(P):HM:HMGRP.FLNK","$(P):HM:SENDGRP")
#! Record("$(P):HM:SENDGRP",1760,2451,0,0,"$(P):HM:SENDGRP")
#! Field("$(P):HM:SENDGRP.INPA",16777215,0,"$(P):HM:SENDGRP.INPA")
#! Link("$(P):HM:SENDGRP.INPA","$(P):HM:HMGRP.VAL")
#! Field("$(P):HM:SENDGRP.OUT",16777215,1,"$(P):HM:SENDGRP.OUT")
#! Link("$(P):HM:SENDGRP.OUT","$(P):HM:ASYN1.AOUT")
#! Record("$(P):HM:PARSE3",2320,2524,0,1,"$(P):HM:PARSE3")
#! Field("$(P):HM:PARSE3.INAA",16777215,1,"$(P):HM:PARSE3.INAA")
#! Link("$(P):HM:PARSE3.INAA","$(P):HM:ASYN2.AINP")
#! Field("$(P):HM:PARSE3.OUT",16777215,0,"$(P):HM:PARSE3.OUT")
#! Link("$(P):HM:PARSE3.OUT","$(P):HM:PARSE4.VAL")
#! Record("$(P):HM:PLC",1680,3116,0,1,"$(P):HM:PLC")
#! Field("$(P):HM:PLC.VAL",16777215,1,"$(P):HM:PLC.VAL")
#! Record("$(P):HM:TI2",2300,3106,0,1,"$(P):HM:TI2")
#! Field("$(P):HM:TI2.A",16777215,0,"$(P):HM:TI2.A")
#! Field("$(P):HM:TI2.OUT",16777215,1,"$(P):HM:TI2.OUT")
#! Link("$(P):HM:TI2.OUT","$(P):HM:ASYN3.AOUT")
#! Record("$(P):HM:TI1",1960,3071,0,1,"$(P):HM:TI1")
#! Field("$(P):HM:TI1.INPA",16777215,0,"$(P):HM:TI1.INPA")
#! Link("$(P):HM:TI1.INPA","$(P):HM:PLC.VAL")
#! Field("$(P):HM:TI1.OUT",16777215,1,"$(P):HM:TI1.OUT")
#! Link("$(P):HM:TI1.OUT","$(P):HM:TI2.A")
#! Record("$(P):HM:ASYN3",2660,3106,0,1,"$(P):HM:ASYN3")
#! Field("$(P):HM:ASYN3.SDIS",16777215,0,"$(P):HM:ASYN3.SDIS")
#! Link("$(P):HM:ASYN3.SDIS","$(P):HM:HOMING.VAL")
#! Field("$(P):HM:ASYN3.AOUT",16777215,0,"$(P):HM:ASYN3.AOUT")
#! Field("$(P):HM:ASYN3.AINP",16777215,1,"$(P):HM:ASYN3.AINP")
#! Field("$(P):HM:ASYN3.FLNK",16777215,0,"$(P):HM:ASYN3.FLNK")
#! Link("$(P):HM:ASYN3.FLNK","$(P):HM:FAN2")
#! Record("$(P):HM:TIMER",2980,3240,0,0,"$(P):HM:TIMER")
#! Field("$(P):HM:TIMER.VAL",16777215,1,"$(P):HM:TIMER.VAL")
#! Record("$(P):HM:FAN2",2560,3396,0,0,"$(P):HM:FAN2")
#! Field("$(P):HM:FAN2.FLNK",16777215,1,"$(P):HM:FAN2.FLNK")
#! Link("$(P):HM:FAN2.FLNK","$(P):HM:TIMER")
#! Field("$(P):HM:FAN2.LNK1",16777215,1,"$(P):HM:FAN2.LNK1")
#! Link("$(P):HM:FAN2.LNK1","$(P):HM:I10")
#! Record("$(P):HM:I10",2980,3446,0,0,"$(P):HM:I10")
#! Field("$(P):HM:I10.FLNK",16777215,1,"$(P):HM:I10.FLNK")
#! Link("$(P):HM:I10.FLNK","$(P):HM:TIMEOUT")
#! Field("$(P):HM:I10.VAL",16777215,1,"$(P):HM:I10.VAL")
#! Record("$(P):HM:TIMEOUT",3300,3318,16777215,0,"$(P):HM:TIMEOUT")
#! Field("$(P):HM:TIMEOUT.INPA",16777215,0,"$(P):HM:TIMEOUT.INPA")
#! Link("$(P):HM:TIMEOUT.INPA","$(P):HM:TIMER.VAL")
#! Field("$(P):HM:TIMEOUT.INPB",16777215,0,"$(P):HM:TIMEOUT.INPB")
#! Link("$(P):HM:TIMEOUT.INPB","$(P):HM:I10.VAL")
#! Record("$(P):HM:M1PV",20,23,0,0,"$(P):HM:M1PV")
#! Record("$(P):HM:M2PV",260,23,0,0,"$(P):HM:M2PV")
#! Record("$(P):HM:M3PV",500,23,0,0,"$(P):HM:M3PV")
#! Record("$(P):HM:M4PV",740,23,0,0,"$(P):HM:M4PV")
#! Record("$(P):HM:M5PV",980,23,0,0,"$(P):HM:M5PV")
#! Record("$(P):HM:M6PV",1220,23,0,0,"$(P):HM:M6PV")
#! Record("$(P):HM:M7PV",1460,23,0,0,"$(P):HM:M7PV")
#! Record("$(P):HM:M8PV",1700,23,0,0,"$(P):HM:M8PV")
#! Record("$(P):HM:M9PV",1940,23,0,0,"$(P):HM:M9PV")
#! Record("$(P):HM:M10PV",2180,23,0,0,"$(P):HM:M10PV")
#! Record("$(P):HM:M11PV",2420,23,0,0,"$(P):HM:M11PV")
#! Record("$(P):HM:M12PV",2660,23,0,0,"$(P):HM:M12PV")
#! Record("$(P):HM:M13PV",2900,23,0,0,"$(P):HM:M13PV")
#! Record("$(P):HM:M14PV",3140,23,0,0,"$(P):HM:M14PV")
#! Record("$(P):HM:M15PV",3380,23,0,0,"$(P):HM:M15PV")
#! Record("$(P):HM:M16PV",3620,23,0,0,"$(P):HM:M16PV")
#! Record("$(P):HM:M17PV",20,23,0,0,"$(P):HM:M17PV")
#! Record("$(P):HM:M18PV",260,23,0,0,"$(P):HM:M18PV")
#! Record("$(P):HM:M19PV",500,23,0,0,"$(P):HM:M19PV")
#! Record("$(P):HM:M20PV",740,23,0,0,"$(P):HM:M20PV")
#! Record("$(P):HM:M21PV",980,23,0,0,"$(P):HM:M21PV")
#! Record("$(P):HM:M22PV",1220,23,0,0,"$(P):HM:M22PV")
#! Record("$(P):HM:M23PV",1460,23,0,0,"$(P):HM:M23PV")
#! Record("$(P):HM:M24PV",1700,23,0,0,"$(P):HM:M24PV")
#! Record("$(P):HM:M25PV",1940,23,0,0,"$(P):HM:M25PV")
#! Record("$(P):HM:M26PV",2180,23,0,0,"$(P):HM:M26PV")
#! Record("$(P):HM:M27PV",2420,23,0,0,"$(P):HM:M27PV")
#! Record("$(P):HM:M28PV",2660,23,0,0,"$(P):HM:M28PV")
#! Record("$(P):HM:M29PV",2900,23,0,0,"$(P):HM:M29PV")
#! Record("$(P):HM:M30PV",3140,23,0,0,"$(P):HM:M30PV")
#! Record("$(P):HM:M31PV",3380,23,0,0,"$(P):HM:M31PV")
#! Record("$(P):HM:M32PV",3620,23,0,0,"$(P):HM:M32PV")
#! Record("$(P):HM:PARSE4",1960,2716,0,1,"$(P):HM:PARSE4")
#! Field("$(P):HM:PARSE4.VAL",16777215,1,"$(P):HM:PARSE4.VAL")
#! Record("$(P):HM:DEBUG",1420,2206,0,1,"$(P):HM:DEBUG")
#! Field("$(P):HM:DEBUG.RVAL",16777215,1,"$(P):HM:DEBUG.RVAL")
