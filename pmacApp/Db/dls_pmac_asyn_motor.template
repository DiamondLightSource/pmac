# % macro, PMAC, The P prefix for the motor controller (must match P in pmacController.template)

# this template defines a motor with two names:-
# (1) root is $(P)$(M), the macros fully define the name of the motor
# (2) 'numbered' names of the form $(PMAC):Mx where x is the motor number
# names are both assigned to the same PV via aliases in the case pmac_asyn_motor
# or simply duplicated for all other included templates, this approach works because
# the PVs all point to the same ASYN parameters and improves maintainability of this
# file

# include motor record from the motor module
include "pmac_asyn_motor.template"

# numbered name aliases for all PVs in pmac_asyn_motor.template
alias($(P)$(M), $(PMAC):M$(ADDR))
alias($(P)$(M):ADDR, $(PMAC):M$(ADDR):ADDR)
alias($(P)$(M):PORT, $(PMAC):M$(ADDR):PORT)
alias($(P)$(M):SCALE, $(PMAC):M$(ADDR):SCALE)
alias($(P)$(M):USER:SDIS, $(PMAC)M$(ADDR):USER:SDIS)
alias($(P)$(M):SDIS, $(PMAC):M$(ADDR):SDIS)
alias($(P)$(M):KILL, $(PMAC):M$(ADDR):KILL)
alias($(P)$(M):ELOSS, $(PMAC):M$(ADDR):ELOSS)
alias($(P)$(M):ELOSSRC, $(PMAC):M$(ADDR):ELOSSRC)
alias($(P)$(M):MR_MOVE_WRITE, $(PMAC):M$(ADDR):MR_MOVE_WRITE)
alias($(P)$(M):CHECK_SYNC, $(PMAC):M$(ADDR):CHECK_SYNC)
alias($(P)$(M):FERROR, $(PMAC):M$(ADDR):FERROR)
alias($(P)$(M):FERRORMAX, $(PMAC):M$(ADDR):FERRORMAX)
alias($(P)$(M):FEMAXRESET, $(PMAC):M$(ADDR):FEMAXRESET)
alias($(P)$(M):HOMEVIS, $(PMAC):M$(ADDR):HOMEVIS)
alias($(P)$(M):HOMEVISSTR, $(PMAC):M$(ADDR):HOMEVISSTR)


###############################################################
# Mres and Offset
###############################################################

#calc mres to be written
record(calcout, "$(P)$(M):MRES_CALC") {
  field(CALC, "B?-A*C:A*C")
  field(INPA, "$(P)$(M).MRES CP")
  field(INPB, "$(P)$(M).DIR CP")
  field(INPC, "$(P)$(M):SCALE")
  field(OUT, "$(P)$(M):MRES_SET PP")
  field(OOPT, "When Non-zero")
}

record(ao, "$(P)$(M):MRES_SET") {
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),$(ADDR),0)PMAC_MRES")
}

#calc offset to be written
record(calcout, "$(P)$(M):OFF_SET_CALC") {
  field(CALC, "A")
  field(INPA, "$(P)$(M).OFF CP")
  field(OUT, "$(P)$(M):OFF_SET PP")
}

record(ao, "$(P)$(M):OFF_SET") {
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),$(ADDR),0)PMAC_OFFSET")
}

include "motor_in_cs.template"
include "eloss_kill_autohome_records.template"
include "pmacDirectMotor.template"


# TODO RESTORE FUNCTIONALITY BELOW
# add numbered name aliases for above 3 templates
# substitute "P=$(PMAC):, M=M$(ADDR)"
# include "motor_in_cs.template"
# include "eloss_kill_autohome_records.template"
# include "pmacDirectMotor.template"