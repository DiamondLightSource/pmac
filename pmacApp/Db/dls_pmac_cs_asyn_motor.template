# A Coordinate system axis.

# macros listed here are those not described in pmac_asyn_motor.template
# % macro, PMAC, The P prefix for the motor controller (must match P in pmacController.template)
# % macro, CS, The CS num for this axis (must match CS in pmacCsController.template)

include "pmac_asyn_motor.template"

record(stringin, "$(P)$(M):CS_PORT_NAME") {
  field(DESC, "Port name for CS")
  field(VAL, "$(PORT)")
}

# add alias for standard CS axis name
alias($(P)$(M), $(PMAC):CS$(CS):M$(ADDR))


###############################################################
# CS Motor Record Mres and Offset
###############################################################

#calc mres to be written
record(calcout, "$(P)$(M):MRES_CALC") {
  field(CALC, "B?-A*C:A*C")
  field(INPA, "$(P)$(M).MRES CP")
  field(INPB, "$(P)$(M).DIR CP")
  field(INPC, "$(P)$(M):SCALE")
  field(OUT, "$(P)$(M):MRES_SET PP")
  field(OOPT, "When Non-zero")
}

record(ao, "$(P)$(M):MRES_SET") {
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),$(ADDR),0)PMAC_MRES")
}

#calc offset to be written
record(calcout, "$(P)$(M):OFF_SET_CALC") {
  field(CALC, "A")
  field(INPA, "$(P)$(M).OFF CP")
  field(OUT, "$(P)$(M):OFF_SET PP")
}

record(ao, "$(P)$(M):OFF_SET") {
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),$(ADDR),0)PMAC_OFFSET")
}
